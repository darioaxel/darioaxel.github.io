import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,f as i,o as n}from"./app-e41xzvbZ.js";const t={};function r(l,e){return n(),s("div",null,[...e[0]||(e[0]=[i(`<h1 id="motivacion" tabindex="-1"><a class="header-anchor" href="#motivacion"><span>Motivación</span></a></h1><div class="hint-container info"><p class="hint-container-title">Información</p><p>En los apuntes anteriores hablamos de cómo SQL es un lenguaje de programación <strong>declarativo</strong>. Esto significa que especificas <strong>qué</strong> quieres, pero no <strong>cómo</strong> obtenerlo. Esto es genial desde la perspectiva del usuario, ya que hace que las consultas sean mucho más fáciles de escribir.</p><p>Sin embargo, como ingenieros de bases de datos, a menudo queremos un lenguaje más <strong>expresivo</strong>. Cuando estudiemos la <strong>optimización de consultas</strong> dentro de unas semanas, necesitaremos una forma de expresar los distintos planes válidos que una base de datos puede usar para ejecutar una consulta.</p><p>Para esto usaremos el <strong>Álgebra Relacional</strong>, un lenguaje de programación <strong>procedimental</strong> (lo que significa que la consulta especifica exactamente qué operadores usar y en qué orden).</p></div><hr><h1 id="_1-introduccion-al-algebra-relacional" tabindex="-1"><a class="header-anchor" href="#_1-introduccion-al-algebra-relacional"><span>1. Introducción al Álgebra Relacional</span></a></h1><p>Todos los operadores en álgebra relacional <strong>reciben una relación como entrada y devuelven otra relación como salida</strong>. Una consulta básica se ve así:</p><p>El operador <strong>proyección (π)</strong> selecciona solo las columnas que desea pasar al siguiente operador (igual que <code>SELECT</code> en SQL). Por ejemplo, si el operador toma como parámetro la relación <code>dogs</code> y devuelve solo la columna <code>name</code>, se obtiene:</p><p><strong>Relación de entrada (<code>dogs</code>)</strong>:</p><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>Scooby</td><td>10</td></tr><tr><td>Buster</td><td>15</td></tr><tr><td>Buster</td><td>20</td></tr></tbody></table><p><strong>Resultado de la consulta</strong>:</p><table><thead><tr><th>name</th></tr></thead><tbody><tr><td>Scooby</td></tr><tr><td>Buster</td></tr></tbody></table><p>Aunque inicialmente los dos <code>Buster</code> son distintos (por la edad), al eliminar la columna <code>age</code>, se vuelven duplicados y solo queda uno en la salida. Las relaciones en álgebra relacional son <strong>conjuntos</strong> de tuplas, lo que significa que <strong>no pueden tener duplicados</strong>.</p><hr><h2 id="proyeccion-π" tabindex="-1"><a class="header-anchor" href="#proyeccion-π"><span>Proyección (π)</span></a></h2><p>La proyección toma una relación como entrada y selecciona solo las columnas especificadas. Las columnas se indican en el subíndice del operador.</p><p>El operador de proyección es la versión en álgebra relacional del <code>SELECT</code> en SQL.</p><p>Ejemplo SQL:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> name</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dogs;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Álgebra relacional:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>π_name(dogs)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>No existe un operador equivalente al <code>FROM</code> en álgebra relacional, ya que los parámetros de los operadores indican de qué relaciones se extraen los datos.</p></blockquote><hr><h2 id="seleccion-σ" tabindex="-1"><a class="header-anchor" href="#seleccion-σ"><span>Selección (σ)</span></a></h2><p>La <strong>selección</strong> filtra filas según una condición. La salida tendrá el mismo esquema que la entrada. Este operador equivale a la cláusula <code>WHERE</code> en SQL.</p><p>Ejemplo SQL:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, age </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dogs </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> age </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Álgebra relacional (dos formas equivalentes):</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>π_name,age(σ_age=12(dogs))</span></span>
<span class="line"><span>σ_age=12(π_name,age(dogs))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Esto demuestra la flexibilidad del álgebra relacional: hay múltiples formas de obtener el mismo resultado.</p></blockquote><p>También se pueden usar <strong>predicados compuestos</strong>:</p><ul><li><code>∧</code> equivale a <code>AND</code></li><li><code>∨</code> equivale a <code>OR</code></li></ul><p>Ejemplo SQL:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, age </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dogs </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> age </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 12</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> AND</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;Timmy&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Álgebra relacional:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>σ_age=12 ∧ name=&#39;Timmy&#39;(dogs)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="union-∪" tabindex="-1"><a class="header-anchor" href="#union-∪"><span>Unión (∪)</span></a></h2><p>La <strong>unión</strong> combina tuplas de dos relaciones y elimina duplicados (como <code>UNION</code> en SQL). Requiere que las relaciones tengan el <strong>mismo número de columnas</strong> y <strong>tipos compatibles</strong>.</p><p>Ejemplo:</p><p><strong>dogs</strong>:</p><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>Scooby</td><td>10</td></tr><tr><td>Buster</td><td>15</td></tr><tr><td>Garfield</td><td>20</td></tr></tbody></table><p><strong>cats</strong>:</p><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>Tom</td><td>8</td></tr><tr><td>Garfield</td><td>10</td></tr></tbody></table><p>Álgebra relacional:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>π_name(dogs) ∪ π_name(cats)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Resultado:</p><table><thead><tr><th>name</th></tr></thead><tbody><tr><td>Scooby</td></tr><tr><td>Buster</td></tr><tr><td>Tom</td></tr><tr><td>Garfield</td></tr></tbody></table><hr><h2 id="diferencia-de-conjuntos-−" tabindex="-1"><a class="header-anchor" href="#diferencia-de-conjuntos-−"><span>Diferencia de conjuntos (−)</span></a></h2><p>Este operador devuelve las tuplas que están en la primera relación pero no en la segunda (como <code>EXCEPT</code> en SQL). También requiere relaciones compatibles.</p><p>Ejemplo:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>π_name(dogs) − π_name(cats)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Resultado:</p><table><thead><tr><th>name</th></tr></thead><tbody><tr><td>Scooby</td></tr><tr><td>Buster</td></tr></tbody></table><hr><h2 id="interseccion-∩" tabindex="-1"><a class="header-anchor" href="#interseccion-∩"><span>Intersección (∩)</span></a></h2><p>La <strong>intersección</strong> mantiene solo las filas que están en ambas relaciones (como <code>INTERSECT</code> en SQL).</p><p>Ejemplo:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>π_name(dogs) ∩ π_name(cats)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Resultado:</p><table><thead><tr><th>name</th></tr></thead><tbody><tr><td>Garfield</td></tr></tbody></table><hr><h2 id="producto-cruzado-×" tabindex="-1"><a class="header-anchor" href="#producto-cruzado-×"><span>Producto cruzado (×)</span></a></h2><p>El <strong>producto cartesiano</strong> combina cada fila de una relación con todas las filas de otra.</p><p>Ejemplo:</p><p><strong>dogs</strong>:</p><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>Scooby</td><td>10</td></tr><tr><td>Buster</td><td>15</td></tr><tr><td>Garfield</td><td>20</td></tr></tbody></table><p><strong>parks</strong>:</p><table><thead><tr><th>park</th><th>city</th></tr></thead><tbody><tr><td>Golden Gate Park</td><td>San Francisco</td></tr><tr><td>Central Park</td><td>New York City</td></tr></tbody></table><p>Álgebra relacional:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>dogs × parks</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Resultado:</p><table><thead><tr><th>name</th><th>age</th><th>park</th><th>city</th></tr></thead><tbody><tr><td>Scooby</td><td>10</td><td>Golden Gate Park</td><td>San Francisco</td></tr><tr><td>Scooby</td><td>10</td><td>Central Park</td><td>New York City</td></tr><tr><td>Buster</td><td>15</td><td>Golden Gate Park</td><td>San Francisco</td></tr><tr><td>Buster</td><td>15</td><td>Central Park</td><td>New York City</td></tr><tr><td>Garfield</td><td>20</td><td>Golden Gate Park</td><td>San Francisco</td></tr><tr><td>Garfield</td><td>20</td><td>Central Park</td><td>New York City</td></tr></tbody></table><hr><h2 id="joins-⨝" tabindex="-1"><a class="header-anchor" href="#joins-⨝"><span>Joins (⨝)</span></a></h2><p>Para representar <strong>joins internos</strong>, se usa el operador <code>⨝</code>.</p><p>Ejemplo (unión por columna <code>name</code>):</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>dogs ⨝_dogs.name = cats.name_ cats</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>También puede escribirse como <strong>join natural</strong> si no se especifica condición:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>dogs ⨝ cats</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>El <strong>Theta Join (⨝<em>cond</em>)</strong> es la forma formal del inner join con condición. También permite predicados compuestos (<code>∧</code>, <code>∨</code>).</p><blockquote><p>Todo join puede representarse como producto cruzado + selección:</p></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>σ_dogs.name=cats.name(dogs × cats)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="renombrado-ρ" tabindex="-1"><a class="header-anchor" href="#renombrado-ρ"><span>Renombrado (ρ)</span></a></h2><p>El operador <code>ρ</code> sirve para cambiar el nombre de una relación o de sus atributos (como un alias en SQL).</p><p>Ejemplo:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ρ(dogs(dname, age))(dogs)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Este ejemplo cambia la columna <code>name</code> a <code>dname</code>.</p><hr><h2 id="agrupamiento-y-agregacion-γ" tabindex="-1"><a class="header-anchor" href="#agrupamiento-y-agregacion-γ"><span>Agrupamiento y Agregación (γ)</span></a></h2><p>Este operador equivale a <code>GROUP BY</code> y <code>HAVING</code> en SQL.</p><p>Ejemplo SQL:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> age </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dogs </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">GROUP BY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> age </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">HAVING</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> COUNT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(*) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Álgebra relacional:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>γ_age; count(*) &gt; 5(dogs)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Otro ejemplo con agregación:</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> age, </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">SUM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">weight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dogs </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">GROUP BY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> age </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">HAVING</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> COUNT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(*) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Álgebra relacional:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>γ_age; SUM(weight), count(*) &gt; 5(dogs)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h1 id="preguntas-de-practica" tabindex="-1"><a class="header-anchor" href="#preguntas-de-practica"><span>Preguntas de práctica</span></a></h1><p>Dadas las siguientes relaciones:</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-text"><span class="line"><span>teams(teamid, name)</span></span>
<span class="line"><span>players(playerid, name, teamid, position)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-encuentra-el-name-y-playerid-de-todos-los-jugadores-que-juegan-de-center" tabindex="-1"><a class="header-anchor" href="#_1-encuentra-el-name-y-playerid-de-todos-los-jugadores-que-juegan-de-center"><span>1. Encuentra el <code>name</code> y <code>playerid</code> de todos los jugadores que juegan de &quot;center&quot;:</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>π_name,playerid(σ_position=&#39;center&#39;(players))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="_2-encuentra-el-name-de-cada-jugador-que-juega-en-los-warriors" tabindex="-1"><a class="header-anchor" href="#_2-encuentra-el-name-de-cada-jugador-que-juega-en-los-warriors"><span>2. Encuentra el <code>name</code> de cada jugador que juega en los &quot;Warriors&quot;:</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>π_name(σ_teams.name=&#39;Warriors&#39;(players ⨝ teams))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Si renombramos <code>players.teamid</code> como <code>pteamid</code>:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>π_name(σ_teams.name=&#39;Warriors&#39;(ρ(players(pplayerid, pname, pteamid, position))(players) ⨝_pteamid=teamid_ teams))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="_3-encuentra-los-teamid-de-todos-los-equipos-que-no-tienen-jugadores" tabindex="-1"><a class="header-anchor" href="#_3-encuentra-los-teamid-de-todos-los-equipos-que-no-tienen-jugadores"><span>3. Encuentra los <code>teamid</code> de todos los equipos que <strong>no tienen jugadores</strong>:</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>π_teamid(teams) − π_teamid(players)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="_4-equivalente-a" tabindex="-1"><a class="header-anchor" href="#_4-equivalente-a"><span>4. Equivalente a:</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> teamid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AS</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tid </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> players</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> players</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">teamid</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> NOT</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> IN</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> teamid </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> teams)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">AND</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> position</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;shooting guard&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Álgebra relacional:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ρ(players(pid, pname, teamid, pos))(σ_pos=&#39;shooting guard&#39;(players)) − π_teamid(teams)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Y luego renombrar el resultado:</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>ρ(tid)(...)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,120)])])}const h=a(t,[["render",r]]),c=JSON.parse('{"path":"/docencia/dam-daw/basesdatos/2-1-algebra-relacional.html","title":"UT02.1 Álgebra relacional","lang":"es-ES","frontmatter":{"title":"UT02.1 Álgebra relacional","icon":"material-symbols:book-5-outline","description":"Motivación Información En los apuntes anteriores hablamos de cómo SQL es un lenguaje de programación declarativo. Esto significa que especificas qué quieres, pero no cómo obtene...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"UT02.1 Álgebra relacional\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-08T09:38:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"darioaxel\\",\\"url\\":\\"darioaxel.dev\\"}]}"],["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/docencia/dam-daw/basesdatos/2-1-algebra-relacional.html"}],["meta",{"property":"og:site_name","content":"darioaxel"}],["meta",{"property":"og:title","content":"UT02.1 Álgebra relacional"}],["meta",{"property":"og:description","content":"Motivación Información En los apuntes anteriores hablamos de cómo SQL es un lenguaje de programación declarativo. Esto significa que especificas qué quieres, pero no cómo obtene..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"es-ES"}],["meta",{"property":"og:updated_time","content":"2025-09-08T09:38:27.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-08T09:38:27.000Z"}]]},"git":{"createdTime":1757324307000,"updatedTime":1757324307000,"contributors":[{"name":"Dario Ureña","username":"","email":"darioaxel@gmail.com","commits":1}]},"readingTime":{"minutes":3.09,"words":928},"filePathRelative":"docencia/dam-daw/basesdatos/2-1-algebra-relacional.md","excerpt":"\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">Información</p>\\n<p>En los apuntes anteriores hablamos de cómo SQL es un lenguaje de programación <strong>declarativo</strong>. Esto significa que especificas <strong>qué</strong> quieres, pero no <strong>cómo</strong> obtenerlo. Esto es genial desde la perspectiva del usuario, ya que hace que las consultas sean mucho más fáciles de escribir.</p>\\n<p>Sin embargo, como ingenieros de bases de datos, a menudo queremos un lenguaje más <strong>expresivo</strong>. Cuando estudiemos la <strong>optimización de consultas</strong> dentro de unas semanas, necesitaremos una forma de expresar los distintos planes válidos que una base de datos puede usar para ejecutar una consulta.</p>\\n<p>Para esto usaremos el <strong>Álgebra Relacional</strong>, un lenguaje de programación <strong>procedimental</strong> (lo que significa que la consulta especifica exactamente qué operadores usar y en qué orden).</p>\\n</div>","autoDesc":true}');export{h as comp,c as data};
