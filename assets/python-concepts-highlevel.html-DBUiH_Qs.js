import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as e,o as n}from"./app--nzziANL.js";const t={};function l(r,i){return n(),a("div",null,[...i[0]||(i[0]=[e(`<h1 id="üêç-conceptos-clave-de-python-que-todo-desarrollador-debe-dominar" tabindex="-1"><a class="header-anchor" href="#üêç-conceptos-clave-de-python-que-todo-desarrollador-debe-dominar"><span>üêç Conceptos clave de Python que todo desarrollador debe dominar</span></a></h1><h2 id="_1-objetos-mutables-e-inmutables" tabindex="-1"><a class="header-anchor" href="#_1-objetos-mutables-e-inmutables"><span>1. Objetos mutables e inmutables</span></a></h2><p>En Python, todo es un objeto. Sin embargo, algunos objetos <strong>pueden modificarse (mutables)</strong> y otros <strong>no (inmutables)</strong>.<br> Comprender esta diferencia es esencial para evitar errores al pasar datos entre funciones o modificar estructuras de datos.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> a√±adir_item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">items</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> valor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    items.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(valor)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> items</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">mi_lista </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">a√±adir_item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(mi_lista, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(mi_lista)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># [1, 2, 3, 4] - modificada en su lugar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>La clave:</strong></p><ul><li>Tipos <strong>inmutables</strong> (<code>int</code>, <code>float</code>, <code>str</code>, <code>tuple</code>) ‚Üí los cambios crean un nuevo objeto.</li><li>Tipos <strong>mutables</strong> (<code>list</code>, <code>dict</code>, <code>set</code>) ‚Üí los cambios afectan al mismo objeto.</li></ul><h3 id="_1-1-ejercicios" tabindex="-1"><a class="header-anchor" href="#_1-1-ejercicios"><span>1.1. Ejercicios</span></a></h3><ol><li><p>Crea una funci√≥n que reciba una lista y le a√±ada un n√∫mero. Comprueba si la lista original cambia fuera de la funci√≥n.</p></li><li><p>Explica qu√© sucede en este c√≥digo y por qu√© los resultados son distintos:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(a, b)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>üìò <strong>Documentaci√≥n oficial:</strong></p><ul><li><a href="https://docs.python.org/3/library/stdtypes.html" target="_blank" rel="noopener noreferrer">Built-in Types ‚Äî Python 3</a><br> üìñ <strong>Lectura recomendada:</strong></li><li><a href="https://realpython.com/python-mutable-vs-immutable-types/" target="_blank" rel="noopener noreferrer">Mutable vs Immutable Objects in Python ‚Äì Real Python</a></li></ul><hr><h2 id="_2-argumentos-mutables-por-defecto" tabindex="-1"><a class="header-anchor" href="#_2-argumentos-mutables-por-defecto"><span>2. Argumentos mutables por defecto</span></a></h2><p>Los valores por defecto en las funciones de Python <strong>solo se eval√∫an una vez</strong>, cuando se define la funci√≥n, no cada vez que se llama.<br> Por eso, usar listas o diccionarios como valores por defecto puede generar comportamientos inesperados.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> a√±adir_a_lista</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">valor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> items</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">[]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    items.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(valor)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> items</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">a√±adir_a_lista</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># [1]</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">a√±adir_a_lista</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># [1, 2] - no es una lista nueva</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>‚úÖ <strong>Soluci√≥n correcta:</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> a√±adir_a_lista</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">valor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;"> items</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> items </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">is</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> None</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        items </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> []</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    items.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">append</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(valor)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> items</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-1-ejercicios" tabindex="-1"><a class="header-anchor" href="#_2-1-ejercicios"><span>2.1. Ejercicios</span></a></h3><ol><li>Implementa una funci√≥n <code>agregar_usuario(nombre, lista=[])</code> y muestra por qu√© este dise√±o es peligroso.</li><li>Corrige el problema usando <code>None</code> como valor por defecto y explica por qu√© la correcci√≥n evita el fallo.</li></ol><p>üìò <strong>Documentaci√≥n oficial:</strong></p><ul><li><a href="https://docs.python.org/3/tutorial/controlflow.html#default-argument-values" target="_blank" rel="noopener noreferrer">Default Argument Values ‚Äî Python Tutorial</a><br> üìñ <strong>Lectura recomendada:</strong></li><li><a href="https://florimond.dev/en/posts/2018/08/python-mutable-defaults-are-the-source-of-all-evil" target="_blank" rel="noopener noreferrer">Python Mutable Defaults Are The Source of All Evil ‚Äì Florimond Manca</a></li></ul><hr><h2 id="_3-paso-de-parametros-por-referencia-de-objeto" tabindex="-1"><a class="header-anchor" href="#_3-paso-de-parametros-por-referencia-de-objeto"><span>3. Paso de par√°metros por referencia de objeto</span></a></h2><p>Python no usa estrictamente ‚Äúpaso por valor‚Äù ni ‚Äúpaso por referencia‚Äù.<br> En su lugar, pasa <strong>referencias a los objetos</strong>, lo que significa que los cambios en objetos mutables afectan a la variable original.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> modificar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">num</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    num </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Dentro:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, num)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">x </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">modificar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(x)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Fuera:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, x)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># sigue siendo 5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>üîç Para los tipos <strong>inmutables</strong>, parece ‚Äúpor valor‚Äù.<br> Para los <strong>mutables</strong>, se comporta ‚Äúpor referencia‚Äù.</p><h3 id="_3-1-ejercicios" tabindex="-1"><a class="header-anchor" href="#_3-1-ejercicios"><span>3.1. Ejercicios</span></a></h3><ol><li>Crea una funci√≥n que modifique una lista dentro de otra funci√≥n y comprueba si el cambio se refleja fuera.</li><li>Explica la diferencia al pasar una lista y una tupla a una funci√≥n que intenta modificarlas.</li></ol><p>üìò <strong>Documentaci√≥n oficial:</strong></p><ul><li><a href="https://docs.python.org/3/reference/datamodel.html" target="_blank" rel="noopener noreferrer">Data model ‚Äî Python 3</a><br> üìñ <strong>Lectura recomendada:</strong></li><li><a href="https://python.plainenglish.io/pass-by-object-reference-in-python-79a8d92dc493" target="_blank" rel="noopener noreferrer">Pass by Object Reference in Python ‚Äì Medium</a></li></ul><hr><h2 id="_4-is-vs" tabindex="-1"><a class="header-anchor" href="#_4-is-vs"><span>4. <code>is</code> vs <code>==</code></span></a></h2><p>En Python, <code>==</code> compara valores y <code>is</code> compara <strong>identidad de objeto</strong>.<br> Esta distinci√≥n es cr√≠tica, especialmente al trabajar con <code>None</code> o peque√±os objetos internos que Python reutiliza.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">b </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(a </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># True</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(a </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">is</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> b)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># False</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Consejos</p><p>Consejo: usa siempre <code>is None</code> y <code>is not None</code> al comprobar valores nulos.</p></div><h3 id="_4-1-ejercicios" tabindex="-1"><a class="header-anchor" href="#_4-1-ejercicios"><span>4.1. Ejercicios</span></a></h3><ol><li>Explica por qu√© <code>x is y</code> puede ser <code>True</code> para enteros peque√±os pero no para listas iguales.</li><li>Crea una funci√≥n que reciba un valor y determine si es <code>None</code> o no usando <code>is</code>.</li></ol><p>üìò <strong>Documentaci√≥n oficial:</strong></p><ul><li><a href="https://docs.python.org/3/reference/datamodel.html" target="_blank" rel="noopener noreferrer">Identity, Equality, and Type ‚Äî Data Model</a><br> üìñ <strong>Lectura recomendada:</strong></li><li><a href="https://realpython.com/python-is-identity-vs-equality/" target="_blank" rel="noopener noreferrer">Is vs == in Python ‚Äì Real Python</a></li></ul><h2 id="_5-iteradores-y-generadores" tabindex="-1"><a class="header-anchor" href="#_5-iteradores-y-generadores"><span>5. Iteradores y generadores</span></a></h2><p>Los <strong>iteradores</strong> son objetos que se recorren elemento a elemento con <code>next()</code>.<br> Los <strong>generadores</strong> son una forma sencilla de crear iteradores sin almacenar todos los datos en memoria.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> cuenta_atras</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">n</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        yield</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> n</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        n </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> cuenta_atras</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(i)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container note"><p class="hint-container-title">Nota</p><p>Los generadores permiten escribir c√≥digo eficiente y legible.</p></div><h3 id="_5-1-ejercicios" tabindex="-1"><a class="header-anchor" href="#_5-1-ejercicios"><span>5.1. Ejercicios</span></a></h3><ol><li>Crea un generador que devuelva los cuadrados de los n√∫meros del 1 al 5.</li><li>Usa <code>iter()</code> y <code>next()</code> para recorrer una lista manualmente, manejando <code>StopIteration</code>.</li></ol><p>üìò <strong>Documentaci√≥n oficial:</strong></p><ul><li><a href="https://docs.python.org/3/tutorial/classes.html#iterators" target="_blank" rel="noopener noreferrer">Iterators ‚Äî Python Docs</a><br> üìñ <strong>Lectura recomendada:</strong></li><li><a href="https://realpython.com/python-iterators-iterables/" target="_blank" rel="noopener noreferrer">Iterators and Iterables in Python ‚Äì Real Python</a></li></ul><h2 id="_6-list-comprehensions-vs-generator-expressions" tabindex="-1"><a class="header-anchor" href="#_6-list-comprehensions-vs-generator-expressions"><span>6. List comprehensions vs generator expressions</span></a></h2><p>Ambas permiten crear secuencias de forma concisa, pero <strong>las comprensiones crean listas completas</strong>, mientras que los <strong>generadores</strong> producen elementos uno a uno (m√°s eficientes en memoria).</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cuadrados_lista </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">x </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">cuadrados_gen </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">x </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> x </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-1-ejercicios" tabindex="-1"><a class="header-anchor" href="#_6-1-ejercicios"><span>6.1. Ejercicios</span></a></h3><ol><li>Crea una lista de n√∫meros pares entre 1 y 20 usando comprensi√≥n de listas.</li><li>Convierte el ejercicio anterior en una expresi√≥n generadora y usa <code>next()</code> para obtener valores.</li></ol><p>üìò <strong>Documentaci√≥n oficial:</strong></p><ul><li><a href="https://docs.python.org/3/reference/expressions.html#generator-expressions" target="_blank" rel="noopener noreferrer">Expressions ‚Äî Python Reference</a><br> üìñ <strong>Lectura recomendada:</strong></li><li><a href="https://www.geeksforgeeks.org/difference-between-list-comprehension-and-generator-expression/" target="_blank" rel="noopener noreferrer">List Comprehensions vs Generator Expressions ‚Äì GeeksforGeeks</a></li></ul><hr><h2 id="_7-administradores-de-contexto-with" tabindex="-1"><a class="header-anchor" href="#_7-administradores-de-contexto-with"><span>7. Administradores de contexto (<code>with</code>)</span></a></h2><p>Los <strong>context managers</strong> permiten manejar recursos (archivos, conexiones, etc.) asegurando su liberaci√≥n, incluso si ocurre un error.<br> Se implementan f√°cilmente con la palabra clave <code>with</code>.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> open</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;datos.txt&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">as</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> f:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    datos </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> f.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">read</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>üîí Garantizan el cierre o limpieza del recurso de forma autom√°tica.</p><h3 id="_7-1-ejercicios" tabindex="-1"><a class="header-anchor" href="#_7-1-ejercicios"><span>7.1. Ejercicios</span></a></h3><ol><li>Crea un programa que lea un archivo usando <code>with</code> y cuente sus l√≠neas.</li><li>Implementa una clase <code>MiContexto</code> con <code>__enter__</code> y <code>__exit__</code> que imprima mensajes al entrar y salir.</li></ol><p>üìò <strong>Documentaci√≥n oficial:</strong></p><ul><li><a href="https://docs.python.org/3/reference/datamodel.html#context-managers" target="_blank" rel="noopener noreferrer">Context Managers ‚Äî Python Tutorial</a><br> üìñ <strong>Lectura recomendada:</strong></li><li><a href="https://realpython.com/python-with-statement/" target="_blank" rel="noopener noreferrer">Context Managers and the with Statement ‚Äì Real Python</a></li></ul><h2 id="_8-el-poder-de-args-y-kwargs" tabindex="-1"><a class="header-anchor" href="#_8-el-poder-de-args-y-kwargs"><span>8. El poder de <code>*args</code> y <code>**kwargs</code></span></a></h2><p><code>*args</code> y <code>**kwargs</code> permiten definir funciones que aceptan un n√∫mero variable de argumentos.<br> Son muy √∫tiles para crear funciones flexibles y reutilizables.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> demo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> *</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> **</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">kwargs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;a:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, a)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;args:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, args)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;kwargs:&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, kwargs)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">demo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">x</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">y</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-1-ejercicios" tabindex="-1"><a class="header-anchor" href="#_8-1-ejercicios"><span>8.1. Ejercicios</span></a></h3><ol><li>Crea una funci√≥n <code>mostrar_datos</code> que reciba cualquier cantidad de argumentos y los imprima.</li><li>Usa <code>**kwargs</code> para mostrar informaci√≥n de usuario (<code>nombre</code>, <code>edad</code>, <code>email</code>).</li></ol><p>üìò <strong>Documentaci√≥n oficial:</strong></p><ul><li><a href="https://docs.python.org/3/tutorial/controlflow.html#more-on-defining-functions" target="_blank" rel="noopener noreferrer">Defining Functions ‚Äî Python Tutorial</a><br> üìñ <strong>Lectura recomendada:</strong></li><li><a href="https://realpython.com/python-kwargs-and-args/" target="_blank" rel="noopener noreferrer">Understanding *args and **kwargs in Python ‚Äì Real Python</a></li></ul><h2 id="_9-decoradores" tabindex="-1"><a class="header-anchor" href="#_9-decoradores"><span>9. Decoradores</span></a></h2><p>Los <strong>decoradores</strong> son funciones que modifican el comportamiento de otras funciones sin alterar su c√≥digo.<br> Son √∫tiles para registrar, validar, medir tiempos o aplicar patrones de dise√±o.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> envoltorio</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(*</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> **</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">kwargs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Llamando a </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">func.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">__name__</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        return</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(*args, **kwargs)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> envoltorio</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@log</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> saludar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">nombre</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">f</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hola, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">{</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">nombre</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">saludar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Python&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-1-ejercicios" tabindex="-1"><a class="header-anchor" href="#_9-1-ejercicios"><span>9.1. Ejercicios</span></a></h3><ol><li>Crea un decorador que mida el tiempo de ejecuci√≥n de una funci√≥n.</li><li>Aplica un decorador que registre las llamadas y los argumentos de una funci√≥n.</li></ol><p>üìò <strong>Documentaci√≥n oficial:</strong></p><ul><li><a href="https://docs.python.org/3/tutorial/controlflow.html#decorators" target="_blank" rel="noopener noreferrer">Decorators ‚Äî Python Tutorial</a><br> üìñ <strong>Lectura recomendada:</strong></li><li><a href="https://realpython.com/primer-on-python-decorators/" target="_blank" rel="noopener noreferrer">Primer on Python Decorators ‚Äì Real Python</a></li></ul><h2 id="_10-name-main" tabindex="-1"><a class="header-anchor" href="#_10-name-main"><span>10. <code>__name__ == &quot;__main__&quot;</code></span></a></h2><p>Esta condici√≥n permite que un m√≥dulo de Python se ejecute <strong>como script principal o como m√≥dulo importado</strong>.<br> Evita que se ejecute c√≥digo no deseado al importar un archivo.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Ejecutando como script!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> __name__</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;__main__&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">    main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-1-ejercicios" tabindex="-1"><a class="header-anchor" href="#_10-1-ejercicios"><span>10.1. Ejercicios</span></a></h3><ol><li>Crea un archivo con esta estructura y ejec√∫talo directamente y desde otro script para ver la diferencia.</li><li>Explica por qu√© <code>__name__</code> toma distintos valores seg√∫n c√≥mo se ejecute el archivo.</li></ol><p>üìò <strong>Documentaci√≥n oficial:</strong></p><ul><li><a href="https://docs.python.org/3/tutorial/modules.html" target="_blank" rel="noopener noreferrer">Modules ‚Äî Python Tutorial</a><br> üìñ <strong>Lectura recomendada:</strong></li><li><a href="https://realpython.com/if-name-main-python/" target="_blank" rel="noopener noreferrer">What Does if <strong>name</strong> == &quot;<strong>main</strong>&quot; Do? ‚Äì Real Python</a></li></ul>`,83)])])}const p=s(t,[["render",l]]),k=JSON.parse('{"path":"/blog/article/python-concepts-highlevel.html","title":"Conceptos de Python üêç","lang":"es-ES","frontmatter":{"title":"Conceptos de Python üêç","date":"2025-10-28T00:00:00.000Z","category":["Blog"],"tag":["Programacion","Python"],"type":"article","description":"üêç Conceptos clave de Python que todo desarrollador debe dominar 1. Objetos mutables e inmutables En Python, todo es un objeto. Sin embargo, algunos objetos pueden modificarse (...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Conceptos de Python üêç\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-10-28T00:00:00.000Z\\",\\"dateModified\\":\\"2025-10-29T14:14:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"darioaxel\\",\\"url\\":\\"darioaxel.dev\\"}]}"],["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/blog/article/python-concepts-highlevel.html"}],["meta",{"property":"og:site_name","content":"darioaxel"}],["meta",{"property":"og:title","content":"Conceptos de Python üêç"}],["meta",{"property":"og:description","content":"üêç Conceptos clave de Python que todo desarrollador debe dominar 1. Objetos mutables e inmutables En Python, todo es un objeto. Sin embargo, algunos objetos pueden modificarse (..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"es-ES"}],["meta",{"property":"og:updated_time","content":"2025-10-29T14:14:36.000Z"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"Programacion"}],["meta",{"property":"article:published_time","content":"2025-10-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-10-29T14:14:36.000Z"}]]},"git":{"createdTime":1761747276000,"updatedTime":1761747276000,"contributors":[{"name":"Dario Ure√±a","username":"","email":"darioaxel@gmail.com","commits":1}]},"readingTime":{"minutes":4.16,"words":1249},"filePathRelative":"blog/article/python-concepts-highlevel.md","excerpt":"\\n<h2>1. Objetos mutables e inmutables</h2>\\n<p>En Python, todo es un objeto. Sin embargo, algunos objetos <strong>pueden modificarse (mutables)</strong> y otros <strong>no (inmutables)</strong>.<br>\\nComprender esta diferencia es esencial para evitar errores al pasar datos entre funciones o modificar estructuras de datos.</p>","autoDesc":true}');export{p as comp,k as data};
