// ==========================
// Preguntas sencillas (10)
// ==========================

::UT01-Q1:: ¿Qué significa el acrónimo HTTP? {
~%-50% HyperText Transfer Protection
~%-50% High Transfer Text Protocol
~%100% HyperText Transfer Protocol
~%-50% HyperTransfer Text Program
}

::UT01-Q2:: ¿Qué puerto suele usar HTTPS por defecto? {
~%0% 21
~%0% 25
~%100% 443
~%0% 110
}

::UT01-Q3:: Una página web estática… {
~%100% Siempre devuelve el mismo contenido salvo que el desarrollador lo modifique.
~%0% Cambia dinámicamente según el usuario.
~%0% Requiere siempre de una base de datos.
~%0% No puede incluir imágenes.
}

::UT01-Q4:: En la arquitectura cliente-servidor, el cliente suele ser… {
~%100% El navegador web u otra aplicación que solicita servicios.
~%0% El ordenador donde se aloja la base de datos.
~%0% El firewall de la red.
~%0% El sistema operativo.
}

::UT01-Q5:: ¿Qué principio SOLID indica que una clase debe tener una única razón para cambiar? {
~%100% Principio de responsabilidad única
~%0% Principio de sustitución de Liskov
~%0% Principio abierto/cerrado
~%0% Principio de inversión de dependencias
}

::UT01-Q6:: ¿Qué código HTTP indica que la petición se realizó con éxito? {
~%0% 404
~%100% 200
~%0% 500
~%0% 301
}

::UT01-Q7:: ¿Qué patrón arquitectónico divide en Modelo, Vista y Controlador? {
~%0% Singleton
~%0% Proxy
~%100% MVC
~%0% Factory
}

::UT01-Q8:: ¿Cuál es una ventaja de la arquitectura cliente-servidor? {
~%100% Centralización del control y fácil mantenimiento
~%0% Que no requiere conexión a red
~%0% Que no hay sobrecarga en el servidor
~%0% Que los clientes funcionan sin servidor
}

::UT01-Q9:: HTTPS utiliza certificados emitidos por… {
~%0% DNS
~%0% Navegadores
~%100% Autoridades de Certificación
~%0% Proxy inverso
}

::UT01-Q10:: ¿Cuál de los siguientes es un método HTTP? {
~%0% SEND
~%100% GET
~%0% FETCH
~%0% CONNECTOR
}

// ==========================
// Preguntas de dificultad media (10)
// ==========================

::UT01-Q11:: ¿Cuál es la principal diferencia entre páginas estáticas y dinámicas? {
~%100% Las dinámicas generan contenido en función de datos o interacciones, las estáticas no.
~%0% Las estáticas usan CSS, las dinámicas no.
~%0% Las dinámicas solo funcionan sin servidor.
~%0% Las estáticas requieren bases de datos obligatoriamente.
}

::UT01-Q12:: ¿Qué principio SOLID establece que los módulos de alto nivel no deben depender de los de bajo nivel? {
~%0% SRP
~%0% OCP
~%0% LSP
~%100% DIP
}

::UT01-Q13:: ¿Qué arquitectura organiza la aplicación en capas de presentación, negocio y datos? {
~%0% Monolítica
~%100% De capas
~%0% Serverless
~%0% Microservicios
}

::UT01-Q14:: ¿Cuál es un ejemplo de cabecera HTTP de petición? {
~%0% Content-Language
~%100% Accept
~%0% Cache-Control
~%0% Server
}

::UT01-Q15:: ¿Qué código de estado indica que un recurso no se ha encontrado? {
~%100% 404
~%0% 200
~%0% 301
~%0% 503
}

::UT01-Q16:: ¿Qué ventaja principal ofrece la arquitectura serverless? {
~%100% Escalabilidad automática y pago por uso
~%0% Menor latencia siempre
~%0% No requiere programación
~%0% No necesita conexión a internet
}

::UT01-Q17:: ¿Cuál de los siguientes es un patrón de comportamiento? {
~%0% Singleton
~%0% Proxy
~%100% Observer
~%0% Builder
}

::UT01-Q18:: ¿Qué protocolo permite comunicación bidireccional en tiempo real? {
~%100% WebSockets
~%0% HTTP
~%0% FTP
~%0% SMTP
}

::UT01-Q19:: ¿Qué tipo de API permite al cliente solicitar solo los datos que necesita? {
~%100% GraphQL
~%0% REST
~%0% SOAP
~%0% WebSocket
}

::UT01-Q20:: ¿Qué ventaja aporta la modularidad de una arquitectura de capas? {
~%100% Permite cambios en una capa sin afectar al resto
~%0% Hace imposible escalar el sistema
~%0% Elimina totalmente los fallos
~%0% Evita el uso de bases de datos
}

// ==========================
// Preguntas de dificultad media-alta (5)
// ==========================

::UT01-Q21:: En el patrón MVC, ¿qué componente coordina las acciones del usuario y la interacción entre los demás componentes? {
~%0% Modelo
~%0% Vista
~%100% Controlador
~%0% Cliente
}

::UT01-Q22:: ¿Cuál es una desventaja de la arquitectura monolítica? {
~%0% Es difícil de desplegar inicialmente
~%0% Permite poca modularidad en cambios
~%100% Se vuelve compleja de mantener al crecer
~%0% No requiere un único proceso
}

::UT01-Q23:: ¿Qué principio SOLID se viola cuando un Pinguino hereda de Pajaro pero no puede volar? {
~%0% SRP
~%100% LSP
~%0% ISP
~%0% DIP
}

::UT01-Q24:: ¿Qué diferencia clave hay entre SOA y Microservicios? {
~%100% SOA busca interoperabilidad y reutilización, Microservicios enfatizan autonomía y granularidad.
~%0% SOA es más reciente que Microservicios.
~%0% Microservicios no usan HTTP.
~%0% SOA siempre es serverless.
}

::UT01-Q25:: En una respuesta HTTP, ¿qué cabecera indica cuánto tiempo puede estar cacheado el contenido? {
~%0% Content-Type
~%100% Cache-Control
~%0% Accept-Language
~%0% Server
}

// ==========================
// Preguntas de dificultad alta (5)
// ==========================

::UT01-Q26:: En la arquitectura basada en eventos (EDA), la comunicación entre componentes se produce… {
~%0% Mediante interfaces síncronas
~%0% Solo con llamadas REST
~%100% Mediante la emisión y suscripción a eventos
~%0% Usando exclusivamente SOAP
}

::UT01-Q27:: ¿Cuál es una desventaja de los microservicios frente a la arquitectura monolítica? {
~%100% Mayor complejidad en la gestión y despliegue
~%0% Menor resiliencia
~%0% Imposibilidad de escalado independiente
~%0% Tiempo de despliegue más largo siempre
}

::UT01-Q28:: ¿Qué principio SOLID evita que una clase deba implementar métodos que no utiliza? {
~%0% SRP
~%0% LSP
~%100% ISP
~%0% DIP
}

::UT01-Q29:: ¿Por qué la arquitectura serverless puede presentar latencia en algunos casos? {
~%100% Debido al “arranque en frío” al inicializar funciones bajo demanda
~%0% Porque depende de HTTP/1.0
~%0% Porque no admite eventos
~%0% Porque requiere hardware específico
}

::UT01-Q30:: ¿Qué arquitectura adoptó Netflix para lograr alta escalabilidad y resiliencia? {
~%0% Monolítica
~%0% En capas
~%100% Microservicios
~%0% Serverless puro
}
// ==========================
// Preguntas de dificultad media-alta (5)
// ==========================

::UT01-Q31:: ¿Qué capa en una arquitectura de tres capas físicas corresponde al almacenamiento y gestión de datos? {
~%0% Servidor web
~%0% Servidor de aplicaciones
~%100% Servidor de base de datos
~%0% Cliente
}

::UT01-Q32:: ¿Cuál de los siguientes patrones pertenece a la categoría de estructurales? {
~%100% Adapter
~%0% Observer
~%0% Factory Method
~%0% Strategy
}

::UT01-Q33:: ¿Qué código de estado HTTP indicaría que el cliente no tiene permisos para acceder al recurso? {
~%0% 404
~%100% 403
~%0% 500
~%0% 302
}

::UT01-Q34:: En una arquitectura monolítica, ¿qué ocurre al escalar la aplicación? {
~%0% Solo se escalan los componentes que lo necesitan
~%100% Se debe escalar toda la aplicación, aunque solo una parte lo requiera
~%0% No es necesario escalar
~%0% Siempre se escalan únicamente los servicios críticos
}

::UT01-Q35:: ¿Qué ventaja aporta una API REST frente a otras opciones? {
~%100% Usa métodos HTTP estándar y recursos identificados por URL
~%0% Siempre cifra los datos sin necesidad de HTTPS
~%0% No necesita cabeceras en las peticiones
~%0% Solo funciona con XML como formato de datos
}

// ==========================
// Preguntas de dificultad alta (5)
// ==========================

::UT01-Q36:: ¿Qué diferencia clave hay entre EDA y Microservicios? {
~%100% EDA se centra en la comunicación mediante eventos, mientras que Microservicios en servicios autónomos independientes
~%0% Microservicios requieren SOAP, EDA no
~%0% EDA siempre es más barato de implementar
~%0% Ambos son exactamente equivalentes
}

::UT01-Q37:: ¿Qué riesgo puede implicar que un servidor web exponga su versión de software en las cabeceras HTTP? {
~%100% Que se aprovechen vulnerabilidades conocidas en esa versión
~%0% Que el navegador muestre contenido corrupto
~%0% Que se bloquee el acceso HTTPS
~%0% Que los clientes no puedan conectarse nunca
}

::UT01-Q38:: ¿Qué principio SOLID busca que las clases puedan extenderse con nuevas funcionalidades sin necesidad de modificar el código existente? {
~%100% Principio abierto/cerrado (OCP)
~%0% Principio de responsabilidad única (SRP)
~%0% Principio de inversión de dependencias (DIP)
~%0% Principio de sustitución de Liskov (LSP)
}

::UT01-Q39:: ¿Qué inconveniente tiene el uso de Serverless para funciones críticas de baja latencia? {
~%0% No puede conectarse a bases de datos
~%100% El arranque en frío introduce retrasos perceptibles
~%0% Siempre requiere monitores externos
~%0% Impide la escalabilidad automática
}

::UT01-Q40:: En una arquitectura SOA, ¿qué papel cumplen las interfaces bien definidas de cada servicio? {
~%100% Garantizan la interoperabilidad y reutilización entre aplicaciones heterogéneas
~%0% Aseguran que los servicios no puedan comunicarse
~%0% Sirven únicamente para mejorar el rendimiento
~%0% Sustituyen a los protocolos de red
}
